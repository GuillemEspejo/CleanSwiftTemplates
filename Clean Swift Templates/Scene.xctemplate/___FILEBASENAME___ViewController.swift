//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created by ___FULLUSERNAME___ on ___DATE___.
//  Copyright Â© ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Guillem Espejo Clean Swift Xcode Templates
//

import UIKit

protocol ___VARIABLE_sceneName___DisplayLogic: class{
    func displaySomething(viewModel: ___VARIABLE_sceneName___.Something.ViewModel)
}

class ___VARIABLE_sceneName___ViewController: UIViewController{
    
    // ------------------------------------------------------------
    // IBOUTLETS - PROPERTIES
    // ------------------------------------------------------------
    // MARK: - IBOutlets - Properties
    var interactor: ___VARIABLE_sceneName___BusinessLogic?
    var router: (NSObjectProtocol & ___VARIABLE_sceneName___RoutingLogic & ___VARIABLE_sceneName___DataPassing)?
    
    
    // ------------------------------------------------------------
    // INIT-DEINIT
    // ------------------------------------------------------------
    // MARK: - Init-Deinit
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?){
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setupCleanComponents()
    }
    
    required init?(coder aDecoder: NSCoder){
        super.init(coder: aDecoder)
        setupCleanComponents()
    }
    
    deinit{
        print("Deinit ___VARIABLE_sceneName___ViewController")
    }
    
    private func setupCleanComponents(){
        let viewController = self
        let presenter = ___VARIABLE_sceneName___Presenter(viewController: viewController)
        let interactor = ___VARIABLE_sceneName___Interactor(presenter:presenter)
        let router = ___VARIABLE_sceneName___Router(viewController: viewController , dataStore: interactor)
        self.interactor = interactor
        self.router = router
    }
    
    // ------------------------------------------------------------
    // ROUTING
    // ------------------------------------------------------------
    // MARK: - Routing
    override func prepare(for segue: UIStoryboardSegue, sender: Any?){
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // ------------------------------------------------------------
    // LIFECYCLE
    // ------------------------------------------------------------
    // MARK: - Lifecycle
    override func viewDidLoad(){
        super.viewDidLoad()
        setLookAndFeel()
        doSomething()
    }
    
    // ------------------------------------------------------------
    // LOOK AND FEEL
    // ------------------------------------------------------------
    // MARK: - Look and feel
    private func setLookAndFeel(){
        // Set look and feel
    }
    
    // ------------------------------------------------------------
    // INTERACTOR CALLS
    // ------------------------------------------------------------
    // MARK: - Interactor Calls
    private func doSomething(){
        let request = ___VARIABLE_sceneName___.Something.Request()
        interactor?.doSomething(request: request)
    }
    
    // ------------------------------------------------------------
    // IBACTIONS
    // ------------------------------------------------------------
    // MARK: - IBActions
    @IBAction func tappedOnSomething(_ sender: Any) {
       // React to tap
    }
    
}

// ------------------------------------------------------------
// PRESENTER OUTPUTS
// ------------------------------------------------------------
// MARK: - Presenter Outputs
extension ___VARIABLE_sceneName___ViewController : ___VARIABLE_sceneName___DisplayLogic {
    func displaySomething(viewModel: ___VARIABLE_sceneName___.Something.ViewModel){
        //Display result
    }
}

